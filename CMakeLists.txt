CMAKE_MINIMUM_REQUIRED(VERSION 3.12)
SET(TARGET etcd_client)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -g -Wall")

FIND_PROGRAM(PROTOC_CMD protoc)
FIND_PROGRAM(PROTOC_PLUGIN_CMD grpc_cpp_plugin)

SET(PROTO_DIR ${CMAKE_CURRENT_SOURCE_DIR}/proto)
FILE(GLOB PROTOC_FILES ${PROTO_DIR}/*.proto)

FOREACH(PROTOC_FILE ${PROTOC_FILES})
    GET_FILENAME_COMPONENT(PROTOC_NAME ${PROTOC_FILE} NAME_WE)
    MESSAGE("PROTOC_FILE:${PROTOC_FILE}")
    SET(CUR_PROTOC_BASE ${PROTO_DIR}/${PROTOC_NAME})
    LIST(APPEND PB_SRC_FILES ${CUR_PROTOC_BASE}.pb.cc ${CUR_PROTOC_BASE}.grpc.pb.cc)
    ADD_CUSTOM_COMMAND(OUTPUT ${CUR_PROTOC_BASE}.pb.h ${CUR_PROTOC_BASE}.pb.cc ${CUR_PROTOC_BASE}.grpc.pb.h ${CUR_PROTOC_BASE}.grpc.pb.cc 
        COMMAND ${PROTOC_CMD} ${PROTOC_FILE} -I${PROTO_DIR} --cpp_out=${PROTO_DIR}
        COMMAND ${PROTOC_CMD} ${PROTOC_FILE} --grpc_out=${PROTO_DIR} --plugin=protoc-gen-grpc=${PROTOC_PLUGIN_CMD} -I${PROTO_DIR}
        DEPENDS ${PROTOC_FILE}
        WORKING_DIRECTORY ${PROTO_DIR}
        DEPENDS ${PROTOC_FILE}
        COMMENT "gen net source file, protoc file is ${PROTOC_FILE}"
        )   
ENDFOREACH(PROTOC_FILE ${PROTOC_FILES})

INCLUDE_DIRECTORIES(${PROTOBUF_INC_DIR})

FILE(GLOB HEADER_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h)
FILE(GLOB SRC_FILES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/proto/)

ADD_LIBRARY(${TARGET} STATIC ${SRC_FILES} ${PB_SRC_FILES})
TARGET_LINK_LIBRARIES(${TARGET} grpc grpc++ protobuf proto)

INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/lib${TARGET}.a DESTINATION ${PROJECT_BINARY_DIR}/lib)

